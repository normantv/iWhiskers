#include "thingProperties.h"
#include "arduino_secrets.h"

/* 
 *  
 * Developed by Norman A. Toro Vega
 * Boston University EK 210 - Intro to Engineering Design
 * 
 * Arduino IoT Cloud code that handles motion detection, opening and 
 * closing of entry points, visual and auditory notifications, and 
 * connection to an online dashboard.
 * 
 * by Norman A. Toro Vega
 * tested on an Arduino MKR WiFi 1010
 * 
 * last updated May 1, 2019
 * 
 */

/* 
  Sketch generated by the Arduino IoT Cloud Thing "iWhiskers"
  https://create.arduino.cc/cloud/things/ **Arduino_Thing_ID_redacted_for_privacy_purposes**

  Arduino IoT Cloud Properties description

  The following variables are automatically generated and updated when changes
  are made to the Thing properties

  bool IOTmouseInside;
  bool IOTpushButton;
  bool IOTcaptureReady;

  Properties which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

// Variables for MouseTrap physical instrumentation
    // Motion Sensor
    int motionSensor = 0;
    int motionReading = 0;

    // Solenoid
    int solenoidPin = 1;

    // Button
    int buttonPin = 2;
    int buttonState;
  
    // Speaker
    int speakerPin = 3;
  
    // LED
    int ledPin = 4;

    // MouseCaptured Boolean
    bool capturedBool = false;

    // CaptureReady Boolean
    bool captureReady = false;

void setup() {
    // Initialize serial and wait for port to open:
    Serial.begin(9600);

    // This delay gives the chance to wait for a Serial Monitor
    // without blocking if none is found
    delay(5000);

    // Declare pinModes
    pinMode(motionSensor, INPUT);
    pinMode(buttonPin, INPUT);
    pinMode(speakerPin, OUTPUT);
    pinMode(ledPin, OUTPUT);
    pinMode(solenoidPin, INPUT);

    // Defined in thingProperties.h
    initProperties();

    // Connect to Arduino IoT Cloud
    ArduinoCloud.begin(ArduinoIoTPreferredConnection);
    for (int i = 4; i > 0; i--) {
        Serial.print("Loading\n");
        delay(1000);
    }

    /*
        The following function allows you to obtain more information
        related to the state of network and IoT Cloud connection and errors
        the higher number the more granular information youâ€™ll get.
        The default is 0 (only errors).
        Maximum is 4
    */
    setDebugMessageLevel(0);
    ArduinoCloud.printDebugInfo();
}

void loop() {
ArduinoCloud.update();
WiFi.lowPowerMode();

    // Code written in this if-statement
    // assumes there is no mouse inside the trap
    // trap is not ready for capture
    if (capturedBool == false && captureReady == false) {
        // Update Arduino Cloud
        //ArduinoCloud.update();

        // Solenoid is off initially
        digitalWrite(solenoidPin, LOW);

                                        /*
                                            Testing Code
                                        */
                                        //Serial.println("While Loop #1");
      
      // Obtain the state of the Button
      buttonState = digitalRead(buttonPin);
      
        // make trap ready for capture        
        if (buttonState == LOW || IOTpushButton == true) {
            // Reset Online Push Button Value
            IOTpushButton = false;
            ArduinoCloud.update();

            IOTmessage = "Mousetrap is waiting for capture...";
            ArduinoCloud.update();
            
            Serial.println("\nMousetrap is ready for capture.\n");
            captureReady = true;
            IOTcaptureReady = true;
            ArduinoCloud.update();
            delay(500);
        }
    }

    // Code written in this while loop
    // assumes there is no mouse inside the trap
    // trap is ready for capture
    while (capturedBool == false && captureReady == true) {
        // Update Arduino Cloud
        ArduinoCloud.update();

                                        /*
                                            Testing Code
                                        */
                                        //Serial.println("While Loop #2");

        // Obtain Motion Sensor Reading
        motionReading = digitalRead(motionSensor);

        // When mouse is sensed inside the trap
        if (motionReading == HIGH) {
            Serial.println("Mouse is inside the trap. Motion detected.");
            IOTmessage = "There is a mouse inside the trap! Please take outside and press pushbutton to release.";
            ArduinoCloud.update();

            // Activate notification when mouse is found
                for (int i = 3; i > 0; i--) {
                    Serial.print(i);
                    Serial.print(" seconds remaining\n");
                    delay(1000);
                }
                Serial.print("\n");

            // Activate LED and Speakers
                Serial.println("LED and Speaker turned on.");
                digitalWrite(ledPin, HIGH);
                tone(speakerPin, 800);
                IOTmouseInside = true;
                IOTcaptureReady = false;
                ArduinoCloud.update();

            // Keep LED and Speakers on for 2 seconds
                Serial.println("2");
                delay(1000);
                Serial.println("1");
                delay(1000);
                Serial.print("\n");

            // LED and Speaker are turned off
                Serial.println("LED and Speaker off.");
                noTone(speakerPin);
                digitalWrite(ledPin, LOW);
                capturedBool = true;
                captureReady = false;
                //Serial.print("\n");
        }
    }

    // Code written below here
    // assumes there is a mouse inside the trap
    // trap is not ready for capture
    while (capturedBool == true && captureReady == false) {
        // Update Arduino Cloud
        ArduinoCloud.update();

        // Store the state of the Button
        buttonState = digitalRead(buttonPin);

                                        /*
                                            Testing Code
                                        */
                                        //Serial.println("While Loop #3");
             
        // Liberate the mouse using the Button
        if (buttonState == LOW) {
            // Reset Online Push Button Value
            IOTpushButton = false;
            //delay(300);
            //ArduinoCloud.update();
                
            // Open the door after 10 seconds
                Serial.println("\nOpening...");
                for (int i = 10; i > 0; i--) {
                IOTmessage = "Releasing mouse in 10 seconds...\n";
                ArduinoCloud.update();
                Serial.print(i);
                Serial.print(" seconds remaining\n");
                delay(1000);
                }

            // Open the door
                Serial.println("\nTrap has been opened.");
                IOTmessage = "Trap has been opened.";
                ArduinoCloud.update();
                digitalWrite(solenoidPin, HIGH);
                delay(2000);
                Serial.println("\nTrap has been closed.");
                IOTmessage = "Trap has been closed.";
                ArduinoCloud.update();

            // There is no mouse inside
                capturedBool = false;
                IOTmouseInside = false;
                ArduinoCloud.update();
        }

                // Liberate the mouse using the Button
        if (IOTpushButton == true) {
            // Reset Online Push Button Value
            IOTpushButton = false;
            //delay(300);
            //ArduinoCloud.update();

            // Open the door
                Serial.println("\nTrap has been opened.");
                IOTmessage = "Trap has been opened.";
                ArduinoCloud.update();
                digitalWrite(solenoidPin, HIGH);
                delay(2000);
                Serial.println("\nTrap has been closed.");
                IOTmessage = "Trap has been closed.";
                ArduinoCloud.update();

            // There is no mouse inside
                capturedBool = false;
                IOTmouseInside = false;
                ArduinoCloud.update();
                delay(2000);

            IOTmessage = "There is no mouse inside the trap. Please setup Mousetrap and press push button to activate!";
            ArduinoCloud.update();

                
        }
    }

        // Functionality that must be added to make the MouseTrap SMART
        // Online button that does the same functions as the physical button:
            // - release
            // - set trap to ready

        // WhileLoop 2 -> if(mouseDetected)
            // Send notification to user

        // Done:
        // Status Indicator (capturedBool) => IOTmouseInside
        // Status Indicator (captureReady) => IOTcaptureReady
}

void onIOTpushButtonChange() {

}
